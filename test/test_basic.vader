" vim: et ts=2 sts=2 sw=2

Before:
  call template#Enable()

  function! GetBuffers(...)
    redir => l:buffers
      silent exec 'buffers!'
    redir end

    let l:ret = []

    for l:line in split(l:buffers, '\n')
      if a:0
        let l:argmatch = a:1
        let l:match = matchlist(l:line, '^.*"' . l:argmatch . '".*')
        if !empty(l:match)
          call add(l:ret, l:argmatch)
        endif
      else
        call add(l:ret, l:line)
      endif
    endfor

    return l:ret
  endfunction

After:
  Restore

Given:
  Some simple text
  with nothing much
  of importance

Execute (Perform case sensitive search and check buffer opens):
  TempSearch testing_nonsense_string

  let t:strtestbuf_name = 'File_Search_Buffer'
  let t:strtestbuf_num = bufnr(t:strtestbuf_name)

  AssertEqual [t:strtestbuf_name], GetBuffers(t:strtestbuf_name)
  AssertEqual 0, getbufvar(t:strtestbuf_num, '&swapfile')
  AssertEqual 'STRTestBuf', getbufvar(t:strtestbuf_num, '&filetype')
  AssertEqual 0, getbufvar(t:strtestbuf_num, '&modifiable')
  AssertEqual 'nofile', getbufvar(t:strtestbuf_num, '&buftype')
  AssertEqual 0, getbufvar(t:strtestbuf_num, '&buflisted')

  unlet t:strtestbuf_num
  unlet t:strtestbuf_name

Execute (Perform two case sensitive searchs and check buffer reopens):
  TempSearch testing_nonsense_string

  let t:strtestbuf_name = 'File_Search_Buffer'
  let t:strtestbuf_num = bufnr(t:strtestbuf_name)
  let t:previous_num_windows = winnr('$')
  let t:previous_buffers_length = len(GetBuffers())

  TempSearch testing_nonsense_string2

  AssertEqual t:strtestbuf_num, bufnr(t:strtestbuf_name)
  AssertEqual t:previous_buffers_length, len(GetBuffers())
  AssertEqual t:previous_num_windows, winnr('$')

  unlet t:strtestbuf_num
  unlet t:strtestbuf_name
  unlet t:previous_num_windows
  unlet t:previous_buffers_length

Execute (Perform case sensitive search and check outcome):
  TempSearch test_basic.vader

  sleep 200ms

  AssertEqual ['./test/test_basic.vader'], getline(2,'$')

Execute (Perform case sensitive search and check outcome, second go):
  TempSearch template.vim

  sleep 200ms

  AssertEqual ['./autoload/template.vim', './plugin/template.vim'], sort(getline(2,'$'))

Execute (Always append to correct buffer and cursor remains):
  let t:original_window = winnr()
  call cursor(2,6)

  TempSearch test

  AssertNotEqual t:original_window, winnr()
  execute t:original_window . ' wincmd w'
  let t:current_position = getpos('.')
  AssertEqual t:current_position[1], 2
  AssertEqual t:current_position[2], 6

  sleep 200ms

  wincmd b
  AssertNotEqual line('$'), 1
  let t:current_position = getpos('.')
  AssertEqual t:current_position[1], 1
  AssertEqual t:current_position[2], 1

  unlet t:current_position
  unlet t:original_window
